#!/usr/bin/env sh

echo "$@" >> /tmp/xcodebuild-$$.log

# We could not care less, luckily this always comes first
if [[ ${1} == --sdk || ${1} == -sdk ]]; then
  shift;
  shift;
elif [[ ${1} == -version ]]; then
  # If Qt uses this to determine C++ features then we need to
  # pretend to be a very recent Xcode.
  echo "Xcode 8.3.3" >> /tmp/xcodebuild-$$.log
  echo "Build version 8E3004b" >> /tmp/xcodebuild-$$.log
  echo "Xcode 8.3.3"
  echo "Build version 8E3004b"
  exit 0
fi

function parse_macos_sdk_ver
{
  local _SYSROOT=${1}; shift
  local _SDK_VER_VAR=${1} ; shift
  local _SDK_VER_MAJOR_VAR=${1} ; shift
  local _SDK_VER_MINOR_VAR=${1} ; shift
  re='[^0-9]*([0-9\.]+)\.\.*'
  if [[ "${_SYSROOT}" =~ $re ]]; then
    local _SDK_VER=${BASH_REMATCH[1]}
    re='([0-9]*)\.([0-9]*).*'
    if [[ "${_SDK_VER}" =~ $re ]]; then
      local _SDK_VER_MAJOR=${BASH_REMATCH[1]}
      local _SDK_VER_MINOR=${BASH_REMATCH[2]}
    fi
  fi
  eval "${_SDK_VER_VAR}=${_SDK_VER}"
  eval "${_SDK_VER_MAJOR_VAR}=${_SDK_VER_MAJOR}"
  eval "${_SDK_VER_MINOR_VAR}=${_SDK_VER_MINOR}"
}

parse_macos_sdk_ver ${CONDA_BUILD_SYSROOT} _CONDA_QT_OSX_SDK_VER _CONDA_QT_OSX_SDK_VER_MAJ _CONDA_QT_OSX_SDK_MIN

case ${1} in

  -version)
    shift
    if [[ ${1} == Path ]]; then
      if [[ -n ${CONDA_BUILD_SYSROOT} ]]; then
        echo ${CONDA_BUILD_SYSROOT} >> /tmp/xcodebuild-$$.log
        echo ${CONDA_BUILD_SYSROOT}
        exit 0
      fi
      if [[ -f /usr/bin/xcodebuild ]]; then
        /usr/bin/xcodebuild --sdk macosx Path
        exit $?
      fi
      echo "TODO :: Implement fallback for xcodebuild --show-sdk-path" >> /tmp/xcodebuild-$$.log
      echo "TODO :: Implement fallback for xcodebuild --show-sdk-path"
      exit 1
    elif [[ ${1} == SDKVersion ]]; then
      echo "${_CONDA_QT_OSX_SDK_VER}" >> /tmp/xcodebuild-$$.log
      echo "${_CONDA_QT_OSX_SDK_VER}"
      exit 0
    elif [[ ${1} == PlatformPath ]]; then
      echo "Making this one up entirely, you may need a real Xcode" >> /tmp/xcodebuild-$$.log
      echo "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform" >> /tmp/xcodebuild-$$.log
      echo "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform"
      exit 0
    elif [[ ${1} == ProductVersion ]]; then
      echo "${_CONDA_QT_OSX_SDK_VER}"
      exit 0
    fi
    ;;

  -license)
    exit 0
    ;;

  *)
    echo "ERROR :: Unimplemented xcodebuild mode ${1}" >> /tmp/xcodebuild-$$.log
    echo "ERROR :: Unimplemented xcodebuild mode ${1}"
    exit 1
    ;;

esac
